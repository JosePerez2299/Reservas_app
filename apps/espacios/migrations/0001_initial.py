# Generated by Django 5.2 on 2025-08-08 17:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('usuarios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Espacio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z][a-zA-Z0-9 ]*', message='El nombre del espacio debe comenzar con una letra, y solo puede contener letras, números y espacios.')])),
                ('piso', models.PositiveSmallIntegerField(help_text='Piso en que se encuentra el espacio (≤ 40)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('capacidad', models.PositiveSmallIntegerField(help_text='Capacidad máxima (≤ 1000)', validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(1)])),
                ('tipo', models.CharField(choices=[('salon', 'Salón'), ('laboratorio', 'Laboratorio'), ('auditorio', 'Auditorio')], max_length=20)),
                ('disponible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('ubicacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.ubicacion')),
            ],
            options={
                'verbose_name': 'Espacio',
                'verbose_name_plural': 'Espacios',
                'ordering': ['ubicacion', 'piso', 'nombre'],
                'indexes': [models.Index(fields=['ubicacion', 'piso'], name='espacios_es_ubicaci_d62e06_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('capacidad__lte', 1000)), name='check_capacidad_max_1000')],
            },
        ),
    ]
